public class NoteBook {
    private String model;
    private String manufacturer;
    private double screenSize;
    private int RAM;
    private int HDD;
    private String processorType;
    private String operatingSystem;
    private String color;
    private double price;

    // Конструктор класса
    public NoteBook(String model, String manufacturer, double screenSize, int RAM, int HDD, String processorType, String operatingSystem, String color, double price) {
        this.model = model;
        this.manufacturer = manufacturer;
        this.screenSize = screenSize;
        this.RAM = RAM;
        this.HDD = HDD;
        this.processorType = processorType;
        this.operatingSystem = operatingSystem;
        this.color = color;
        this.price = price;
    }

    // Геттеры и сеттеры для всех полей

    public String getModel() {
        return model;
    }

    public void setModel(String model) {
        this.model = model;
    }

    public String getManufacturer() {
        return manufacturer;
    }

    public void setManufacturer(String manufacturer) {
        this.manufacturer = manufacturer;
    }

    public double getScreenSize() {
        return screenSize;
    }

    public void setScreenSize(double screenSize) {
        this.screenSize = screenSize;
    }

    public int getRAM() {
        return RAM;
    }

    public void setRAM(int RAM) {
        this.RAM = RAM;
    }

    public int getHDD() {
        return HDD;
    }

    public void setHDD(int HDD) {
        this.HDD = HDD;
    }

    public String getProcessorType() {
        return processorType;
    }

    public void setProcessorType(String processorType) {
        this.processorType = processorType;
    }

    public String getOperatingSystem() {
        return operatingSystem;
    }

    public void setOperatingSystem(String operatingSystem) {
        this.operatingSystem = operatingSystem;
    }

    public String getColor() {
        return color;
    }

    public void setColor(String color) {
        this.color = color;
    }

    public double getPrice() {
        return price;
    }

    public void setPrice(double price) {
        this.price = price;
    }
}

public List<NoteBook> filterNotebooks(List<NoteBook> notebooks) {
    Scanner scanner = new Scanner(System.in);
    System.out.println("Введите цифру, соответствующую необходимому критерию:");
    System.out.println("1 - ОЗУ");
    System.out.println("2 - Объем ЖД");
    System.out.println("3 - Операционная система");
    System.out.println("4 - Цвет");
    int choice = scanner.nextInt();

    System.out.println("Введите минимальное значение для выбранного критерия:");
    int minValue = scanner.nextInt();

    List<NoteBook> filteredNotebooks = new ArrayList<>();
    for (NoteBook notebook : notebooks) {
        if (choice == 1 && notebook.getRam() >= minValue) {
            filteredNotebooks.add(notebook);
        } else if (choice == 2 && notebook.getStorage() >= minValue) {
            filteredNotebooks.add(notebook);
        } else if (choice == 3 && notebook.getOs().equals(String.valueOf(minValue))) {
            filteredNotebooks.add(notebook);
        } else if (choice == 4 && notebook.getColor().equals(String.valueOf(minValue))) {
            filteredNotebooks.add(notebook);
        }
    }
    return filteredNotebooks;
}
